name: CI

on: [push, pull_request]

jobs:
  build_windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - { std: 20 }
          - { std: 23 }
    name: "MSVC /std:c++${{matrix.config.std}}"
    steps:
      - uses: actions/checkout@v3

      - name: Configure MSVC console (Windows)
        uses: ilammy/msvc-dev-cmd@v1


      - name: "setup"
        shell: "bash"
        run: |
          cmake \
            -S . \
            -B build \
            -DUNIT_TEST=yes \
            -DCMAKE_CXX_COMPILER=cl \
            -DCMAKE_C_COMPILER=cl \
            -DCMAKE_CXX_STANDARD=${{matrix.config.std}} \
            -DCMAKE_CXX_FLAGS="'/permissive- /EHsc /W4 /WX'" \
            -DCMAKE_BUILD_TYPE=Debug \
            -G Ninja

      - name: "build"
        shell: "bash"
        run: |
          cmake --build build -t test_stable_vector

      - name: "test"
        shell: "bash"
        run: |
          ./build/test_stable_vector

  build_linux:
    runs-on: ubuntu-latest
    container: "ghcr.io/rollbear/${{matrix.config.container}}"
    strategy:
      fail-fast: false
      matrix:
        config:
          #- { container: "clang:15", cxx: "clang++-15", stdlib: "libc++", lflags: "-lc++abi" }
          - { container: "clang:15", cxx: "clang++-15" }
          - { container: "gcc:12",   cxx: "g++-12" }

    name: "Linux ${{matrix.config.cxx}} C++20 ${{matrix.config.stdlib}}"
    steps:
      - uses: actions/checkout@v3

      - name: "setup"
        shell: bash
        run: |
          STDLIB=""
          if [ -n "${{matrix.config.stdlib}}" ]
          then
            STDLIB="-stdlib=libc++"
          fi
          cmake \
            -S . \
            -B build \
            -DUNIT_TEST=yes \
            -DCMAKE_CXX_COMPILER=${{matrix.config.cxx}} \
            -DCMAKE_CXX_FLAGS="${STDLIB} -Wall -Wextra -Wpedantic -Werror -Wconversion -Wshadow --coverage" \
            -DCMAKE_EXE_LINKER_FLAGS="${{matrix.config.lflags}}" \
            -DCMAKE_PREFIX_PATH="/usr/local/lib/c++20${{matrix.config.stdlib}}" \
            -DCMAKE_BUILD_TYPE=Debug
      - name: "build"
        run: |
          cmake --build build -t test_stable_vector

      - name: "test"
        run: |
          ./build/test_stable_vector
          find . -name "*.gcno"

      - name: "collect coverage"
        run: |
          COV=`echo ${{matrix.config.cxx}} | grep -q clang && echo "llvm-cov gcov"|| echo gcov`
          echo ${COV} -abcfu `find . -name "main.cpp.gcno"`
          ${COV} -abcfu `find . -name "main.cpp.gcno"`

      - name: "upload coverage"
        uses: codecov/codecov-action@v3
        with:
            files: stable_vector.hpp.gcov
            name: "Linux ${{matrix.config.cxx}} C++20 ${{matrix.config.stdlib}}"
            fail_ci_if_error: false
            verbose: true
